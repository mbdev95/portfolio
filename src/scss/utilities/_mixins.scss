@use 'sass:math';

// A mixin for creating the intro text shadow 3D effect
@mixin introTextShadow() {
    $introTextShadows: ();
    @for $i from 1 through 50 {
        $x: 0.125 * $i + px;
        $y: 0.125 * $i + px;
        $rgb: 255 - $i * 5;
        $shadow: $x $y rgb($rgb, $rgb, $rgb);
        $introTextShadows: append($introTextShadows, $shadow, comma);
    }
    text-shadow: $introTextShadows;
}

// A mixin for styling buttons
@mixin buttons {
    button {
        @extend %project-buttons;
        background-color: rgb(39, 58, 226);
        transition: background-color 0.3s ease-in-out;
    }

    a button {
        width: 100%;
    }

    button:hover {
        cursor: pointer;
        background-color: rgba(70, 83, 207, 0.35);
    }

    button:active {
        background-color: transparent;
    }
}

// A mixin for styling each project in the portfolio
@mixin project {
    h2 {
        margin-top: 10px;
        margin-bottom: 5px;
    }

    &--img {
        margin-top: 10px;
        width: auto;
        height: 175px;
        margin: 10px auto 0px;
    }

    @for $i from 1 through $numberOfProjects {
        &:nth-of-type(#{$i}) &--img {
            @if $i == 1 {
                @include setProjectImage("#{$imgLogo}/javascript.png", '#{$imgMd}/WarOfWeaponsMedium.png', '#{$imgLg}/WarOfWeaponsLarge.png');
            } @else if $i == 2 {
                @include setProjectImage("#{$imgLogo}/css.png", '#{$imgUniversal}/BrooklynBridgeFilmFestival.png', null);
            } @else if $i == 3 {
                @include setProjectImage("#{$imgLogo}/mysql.jpg", '#{$imgMd}/ExpressFoodMedium.png', '#{$imgLg}/ExpressFoodLarge.png');
            } @else if $i == 4 {
                @include setProjectImage("#{$imgLogo}/react.png", '#{$imgMd}/RestaurantReviewLocatorMedium.png', '#{$imgLg}/RestaurantReviewLocatorLarge.png');
            } @else {
                @include setProjectImage("#{$imgLogo}/html.png", '#{$imgUniversal}/RandomQuotationGenerator.png', null);
            }
        }
    }

    h3 {
        margin-top: 13.5px;
        margin-bottom: 13.5px;
    }

    h3, p, ul, li {
        text-align: start;
    }

    @include lists;

    &--githubLinks {
        a[href^='https://github.com/mbdev95'] button {
            margin-bottom: 7px;
        }

        a[href$='Project-6-War-Of-Weapons-Board-Game/'] button {
            display: none;
        }
    }

    button {
        border-radius: 500px;
        width: 100%;
        background-color: rgb(29, 29, 170);
    }

    button:hover {
        cursor: pointer;
        background-color: rgb(47, 47, 160);
    }

    &:nth-of-type(3) a button {
        margin-bottom: 7px;
    }

    &:nth-of-type(4) a button[type='button'] {
        margin-bottom: 7px;
    }

    &:nth-of-type(5) a:last-of-type button[type='button'] {
        margin-bottom: 19px;
    }

    &:last-of-type a[href^='https://mbdev95.github.io/'] button {
        margin-bottom: 10px;
    }

    @include mq('medium') {
        img[alt^='Brooklyn'], img[alt^='Express'] {
            width: 80%;
        }

        img[alt^='Orwellian'] {
            width: 90%;
        }

        h3 {
            margin-bottom: 0px;
        }

        li {
            display: inline;
            padding-right: 10px;
            line-height: 1.75;
        }

        &--githubLinks {
            display: flex;
            justify-content: space-between;
            a {
                width: 48%;
            }
        }

        &:first-of-type .portfolio--project--githubLinks {
            display: inline-block;
            justify-content: none;
            width: 100%;
        }
    }

    @include projectImageResizing;

    @media (min-width: 1020px) {
        &:first-of-type .portfolio--project--githubLinks {
            display: flex;
            justify-content: space-between;

            a[href$='Project-6-War-Of-Weapons-Board-Game/'] button {
                display: inline-block;
            }
        }
    }

    @include mq('extra-large') {
        img {
            width: 66%;
        }
    }
    
}

// Mixin for alternating project images depending on viewport width
@mixin setProjectImage($logoImage, $applicationImageMedium, $applicationImageLarge) {
    background-image: url($logoImage);
    background-size: auto 100%;
    background-repeat: no-repeat;
    background-position: center;

    @media (min-width: 699px) {
        background-image: url($applicationImageMedium);
    }

    @media (min-width: 1200px) {
        @if $applicationImageLarge != null {
            background-image: url($applicationImageLarge);
        } @else {
            background-image: url($applicationImageMedium);
        }
    }
}

// Mixin for media queries resizing images in portfolio page
@mixin projectImageResizing {
    &--img {
        @media(min-width: 699px) {
            height: 300px;
        }

        @media(min-width: 900px) {
            height: 450px;
        }

        @media(min-width: 1200px) {
            height: 475px;
        }
    }

    &:nth-of-type(2) &--img, &:nth-of-type(5) &--img {
        @media(min-width: 699px) {
            height: 175px;
        }

        @media(min-width: 900px) {
            height: 225px;
        }

        @media(min-width: 1100px) {
            height: 275px
        }

        @media(min-width: 1300px) {
            height: 350px;
        }
    }

    &:nth-of-type(3) &--img {
        @media(min-width: 1200px) {
            height: 400px;
        }
    }
}

@mixin previewProjects {
    display: flex;
    flex-direction: column;
    background-color: $box-bg-color;

    & a {
        color: $text-color;
    }

    @for $i from 1 through $numberOfProjects {
        &--project--#{$i} {
            background-color: $box-bg-color;
            position: absolute;
            top: calc((($i - 1)* $projectHeight) + (($i - 1) * $projectSeparation));
            left: 45%;
            width: 55%;
            height: $projectHeight;
            padding-left: 10px;
            padding-right: 10px;
            border-radius: 5px;
            transition: background-color 0.325s ease-out;
            @include lists;

            li {
                display: inline;
                padding-right: 10px;
                line-height: 1.75;
            }

            h2 {
                text-align: center;
                margin-top: 10px;
                margin-bottom: 0px;
            }

            ul {
                margin: 10px 0;
            }

            &:hover {
                cursor: pointer;
                background-color: rgba(17, 17, 73, 0.35);
            }

            &:active {
                background-color: transparent;
            }

            @media (max-width: 1225px) and (max-height: 1000px) {
                display: flex;
                align-items: center;
                justify-content: center;

                ul {
                    display: none;
                }

                h2 {
                    margin: 0;
                }

            }
        }
    }
}

@mixin home-sideBar {
    display: flex;
    flex-direction: column;
    background-color: $box-bg-color;
    width: 40% !important;
}

@mixin lists {
    ul {
        list-style: none;
        padding: 0px;
        display: flex;
        flex-wrap: wrap;
    }

    ul li:before {
        content: "\2022";  
        color: $text-color; 
        width: 1em; 
        height: 1em;
        padding-right: 10px;
        line-height: 1.75;
    }

    ul li {
        padding-right: 15px;
    }
}

@mixin nav {
    display: flex;
    justify-content: space-between;

    a {
        width: 45%;
    }
    
    button {
        border-radius: 5px;
    }
}

@mixin socialMediaInHeader($socialMediaNavWidth, $mainNavWidth) {
    h1 {
        width: auto;
    }

    &--socialMedia {
        display: flex;
        justify-content: space-evenly;
        width: 30%;
        margin-top: 5px;
    }

    &--socialMedia a {
        width: $socialMediaNavWidth;
    }

    &--socialMedia a img {
        width: 40%;
    }

    &--nav {
        width: $mainNavWidth;
    }
}

// A media query mixin creator to create media query statements.
@mixin mq($break) {
    @if $break == 'small' {
        @media (min-width: $brkpoint-sm) {
            @content;
        }
    }
    @else if $break == 'medium' {
        @media (min-width: $brkpoint-md) {
            @content;
        }
    }
    @else if $break == 'large' {
        @media (min-width: $brkpoint-lg) {
            @content;
        }
    }
    @else if $break == 'extra-large' {
        @media (min-width: $brkpoint-xl) {
            @content;
        }
    }
    @else {
        @error 'No value could be retrieved for `#{$break}`. '
    }
}