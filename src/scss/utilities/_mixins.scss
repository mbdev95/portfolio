@use 'sass:math';

// Animation for causing the star to twinkle and then become a shooting star
@mixin animation {
    @keyframes startTwinkle {
        40% {
            transform: scale(1.35);
        }
    
        80% {
            transform: scale(1.6);
        }
    }

    @keyframes disappearing {
        100% {
            top: 50%;
            left: 50%;
        }
    }

    animation: startTwinkle 2s ease-out 0.5s, 
               disappearing 2s ease-out 2.5s, 
               startTwinkle 2s ease-out math.random(5) + 4.5s;
}

// A mixin to generate the stars
@mixin starGenerator {
    $star-colors-list: map-get($bg-colors, star-colors);
    @for $i from 1 through 250 {
        &--#{$i} {
            position: absolute;
            top: math.floor(math.random() * 100%);
            left: math.floor(math.random() * 100%);
            width: math.random(2) * 1px;
            height: math.random(2) * 1px;
            border-radius: (math.random() * 10%) + 45%;
            filter: blur(0.7px);
            @each $starColor in $star-colors-list {
                @if math.random(5) == index($star-colors-list, $starColor) {
                    background-color: $starColor;
                }
            }
            &__animation {
                @include animation; 
            }
        }
    }
}